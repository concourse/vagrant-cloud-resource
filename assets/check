#!/bin/sh
# vim: set ft=sh

set -e -u

exec 3>&1 # make stdout available as fd 3 for the result
exec 1>&2 # redirect all output to stderr for logging

# for jq
PATH=/usr/local/bin:$PATH

payload=$(mktemp /tmp/resource-in.XXXXXX)
cat > $payload <&0

access_token=$(jq -r '.source.access_token // ""' < $payload)
username=$(jq -r '.source.username // ""' < $payload)
box=$(jq -r '.source.box // ""' < $payload)
provider=$(jq -r '.source.provider // ""' < $payload)
version=$(jq -r '.version.version // ""' < $payload)

abort() {
  echo "$@"
  exit 1
}

curl_f() {
  curl -s -f "$@"
}

[ -n "$access_token" ] || abort "missing access_token"
[ -n "$username" ] || abort "missing username"
[ -n "$box" ] || abort "missing box"
[ -n "$provider" ] || abort "missing provider"

curl_f -X GET https://atlas.hashicorp.com/api/v1/box/${username}/${box} \
  -d "access_token=${access_token}" > box.json

provider_name=$(echo $provider | jq -R .)

current_version=$(echo $version | jq -R .)

latest_version=$(
jq -r "
  .current_version |
    select(.providers | map(.name) | contains([$provider_name])) |
    select(.version != ${current_version}) |
    .version
" < box.json
)

request_version=$(
jq -r "
  .versions[] |
    select(.providers[] | .name == ${provider_name}) |
    select(.version == ${current_version}) |
    .version
" < box.json
)

jq -n --arg s "$request_version $latest_version" '[ $s | split(" ")[] | select(. != "") |{version: .} ]' >&3
